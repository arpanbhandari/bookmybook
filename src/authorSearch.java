/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//package bookmybook;

import java.sql.*;
import com.mysql.jdbc.Driver;
import java.util.*;
import java.util.Date;
import java.util.Calendar.*;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.text.SimpleDateFormat;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.WindowConstants;

/**
 *
 * @author darshan-ubuntu
 */
public class authorSearch extends javax.swing.JFrame {

    private Connection con = null;
    private Statement statement = null;
    ResultSet resultSet = null;
    String bookName;
    Vector titleList;
    String selected = "";
    BookMyBook parent;
    String uname;
    PreparedStatement preparedStatement = null;
    String isbn;
    int cart_no;
    String date;
    int order_no;
    int quantity;
    
    /**
     * Creates new form authorSearch
     */
    public authorSearch(BookMyBook temp, String uname) throws SQLException {
        initComponents();
        
        bookName = new String();
        titleList = new Vector();
        parent = temp;
        this.uname = uname;
        System.out.println(uname);
        
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent ev) {
                parent.setVisible(true);
            }
        });

        new Driver();
       
        con = DriverManager.getConnection(
                       "jdbc:mysql://localhost:3306/bookmybook?zeroDateTimeBehavior=convertToNull",
                       "root",
                       "sankafc");
        
        statement = con.createStatement();

        jList1.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent evt) {
                if (!evt.getValueIsAdjusting()) {
                    // code here
                    selected = jList1.getSelectedValue().toString();
                }
            }
        });
        
        fillAuthorCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Author :");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jLabel2.setText("List of Books");

        jButton2.setText("Select");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Enter Quantity :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        fillList();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(selected.equals("")){
            JOptionPane.showMessageDialog(null, "Please select a book");
        }
        else if(jTextField2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter quantity");
        }
        else if(uname.equals("")){
            JOptionPane.showMessageDialog(null, "You need to login to place an order");
        }
        else{
            Date d = new Date();
            SimpleDateFormat df = new SimpleDateFormat( "yyyy");
            date = df.format(d) + "-";
            df = new SimpleDateFormat( "MM");
            date = date + df.format(d) + "-";
            df = new SimpleDateFormat( "dd");
            date = date + df.format(d);

            quantity = Integer.parseInt(jTextField2.getText());
            System.out.println(quantity);

            try {
                resultSet = statement
                    .executeQuery("select max(cart_no) from CART;");
                if (resultSet.next()) {
                    cart_no = resultSet.getInt(1) + 1;
                    System.out.println("cart_no=" + cart_no);
                }
                else {
                    cart_no = 1;
                }
                order_no = cart_no;
            }
            catch (SQLException e) {
                e.printStackTrace();
            }

            try {
                resultSet = statement
                        .executeQuery("select isbn from BOOK where title='" + selected + "';");

                while (resultSet.next()) {
                    isbn = resultSet.getString(1);
                }
            }
            catch (SQLException e) {
                e.printStackTrace();
            }

            try {
                preparedStatement = con
                        .prepareStatement("insert into CART values (" + cart_no + ",'" + uname + "');");
                System.out.println("insert into CART values (" + cart_no + ",'" + uname + "');");
                preparedStatement.executeUpdate();
            }
            catch (SQLException e) {
                e.printStackTrace();
            }

            try {
                preparedStatement = con
                        .prepareStatement("insert into ORDERS values (" + order_no + "," + cart_no + ",'" + isbn + "'," + quantity +",'2013-12-16');");
                System.out.println ("insert into ORDERS values (" + order_no + "," + cart_no + ",'" + isbn + "'," + quantity +",'" + date + "');");
                preparedStatement.executeUpdate();
            }
            catch (SQLException e) {
                e.printStackTrace();
            }
            
            JOptionPane.showMessageDialog(null, "Book selected");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    void fillList() {
        bookName = jComboBox1.getSelectedItem().toString();
        try {
            resultSet = statement
                .executeQuery("select b.title from BOOK b,AUTHOR a where b.author_id=a.author_id and a.author_name='" + bookName + "';");
   
            while (resultSet.next()) {
                titleList.addElement(resultSet.getString("title"));
            }
            jList1.setListData( titleList );
        }
        catch (SQLException e) {
            e.printStackTrace();
        }
        
    }
    
    void fillAuthorCombo() {
        try {
            resultSet = statement
                .executeQuery("select author_name from AUTHOR order by author_name");
   
            while (resultSet.next()) {
               String name = resultSet.getString("author_name");
               jComboBox1.addItem(name);
            }
        }
        catch (SQLException e) {
            e.printStackTrace();
        }

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
